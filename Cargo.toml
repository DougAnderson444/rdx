[workspace]
members = [".", "examples/counter"]

[package]
name = "rdx"
version = "0.1.0"
authors = ["Emil Ernerfeldt <emil.ernerfeldt@gmail.com>"]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.78"                                                # Minimum version required to build this project, for wasm-wsip1 target, 1.78 minimum is required.

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
egui = "0.29"
eframe = { version = "0.29", default-features = false, features = [
  "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
  "default_fonts", # Embed the default egui fonts.
  "glow",          # Use the glow rendering backend. Alternative: "wgpu".
  "persistence",   # Enable restoring app state when restarting the app.
] }
log = "0.4"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }

pest = "2.7"
pest_derive = "2.7.14"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
thiserror = "1"
wasm_component_layer = "0.1.18"
wasm_runtime_layer = "0.4"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11"
rhai = { version = "1.19", features = ["sync"] }
# TODO: Feature gate this & use jco for wasm-bindgen builds
wasmtime = { version = "25" }
wasmtime-wasi = { version = "25" }
wasi-common = { version = "25.0.1", features = ["tokio"] }
wasm-compose = "0.219.1"
wasmparser = "0.219.1"
wasmtime_runtime_layer = "26.0.0"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
web-sys = "0.3.70"                                       # to access the DOM (to hide the loading text)
getrandom = { version = "0.2", features = ["js"] }       # For web builds
rhai = { version = "1.19", features = ["wasm-bindgen"] }
js_wasm_runtime_layer = "0.4.0"
anyhow = "1.0"

[profile.release]
opt-level = 2 # fast and small wasm
# codegen-units = 1
# opt-level = "s"
# debug = false
# strip = true
# lto = true

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
